<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.OrderMapper">
    <resultMap id="orderMap" type="Order">
        <id property="orderId" column="order_id" jdbcType="NUMERIC"/>
        <result property="orderSid" column="order_sid" jdbcType="VARCHAR"/>
        <result property="goodsNum" column="goods_num" jdbcType="VARCHAR"/>
        <result property="goodsName" column="goods_name" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="NUMERIC"/>
        <result property="payPrice" column="pay_price" jdbcType="NUMERIC"/>
        <result property="amount" column="amount" jdbcType="NUMERIC"/>
        <result property="buyerName" column="buyer_name" jdbcType="VARCHAR"/>
        <result property="buyerAddress" column="buyer_address" jdbcType="VARCHAR"/>
        <result property="buyerPhone" column="buyer_phone" jdbcType="VARCHAR"/>
        <result property="createId" column="create_id" jdbcType="NUMERIC"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
        <result property="status" column="status" jdbcType="NUMERIC"/>
    </resultMap>

    <sql id="columns">
        a.order_id,a.order_sid,a.goods_num,a.goods_name,a.price,a.pay_price
        ,a.amount,a.buyer_name,a.buyer_address,a.buyer_phone,a.create_id,a.create_time
        ,a.update_time,a.status
	</sql>

    <insert id="add" parameterType="Order">
        insert into pn_order
        (
            order_id,order_sid,goods_num,goods_name,price,pay_price
            ,amount,buyer_name,buyer_address,buyer_phone,create_id,create_time
            ,update_time,status
        )
        values
        (
            #{orderId,jdbcType=NUMERIC}, #{orderSid,jdbcType=VARCHAR}, #{goodsNum,jdbcType=VARCHAR},
            #{goodsName,jdbcType=VARCHAR}, #{price,jdbcType=NUMERIC}, #{payPrice,jdbcType=NUMERIC},
            #{amount,jdbcType=NUMERIC}, #{buyerName,jdbcType=VARCHAR}, #{buyerAddress,jdbcType=VARCHAR},
            #{buyerPhone,jdbcType=VARCHAR}, #{createId,jdbcType=NUMERIC}, #{createTime,jdbcType=TIMESTAMP},
            #{updateTime,jdbcType=TIMESTAMP}, #{status,jdbcType=NUMERIC}
        )
    </insert>

    <select id="get" parameterType="java.lang.Integer" resultMap="orderMap">
        select
        <include refid="columns"/>
        from pn_order a
        where
        order_id=#{orderId}
    </select>

    <!-- 获取当天最新订单号 -->
    <select id="getLastSid" parameterType="java.util.Map" resultType="java.lang.String">
        select
          a.order_sid
        from pn_order a
        where
          order_sid like '${orderPrefix,jdbcType=VARCHAR}%'
        order by order_sid desc
        limit 1
    </select>

    <select id="listPage" parameterType="java.util.Map" resultMap="orderMap">
        select
        <include refid="columns"/>
        from pn_order a
        where a.status &lt; 64
        <if test="whereSql!=null">
            and ${whereSql}
        </if>
        <if test="orderSid != null and orderSid != ''">
            and a.order_sid like '%${orderSid}%'
        </if>
        <if test="goodsName != null and goodsName != ''">
            and a.goods_name like '%${goodsName}%'
        </if>
        <if test="buyerName != null and buyerName != ''">
            and a.buyer_name like '%${buyerName}%'
        </if>
        <if test="startTime != null">
            and a.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endTime != null and endTime != ''">
            and a.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
        </if>
        <choose>
            <when test="orderSql!=null">
                ORDER BY ${orderSql}
            </when>
            <otherwise>
                ORDER BY a.order_id DESC
            </otherwise>
        </choose>
        limit ${offset},${limit}
    </select>

    <!-- 根据条件获取所有行数，一般提供列表翻页使用，这一步也可以在mybatis拦截器中完成 -->
    <select id="countPage" parameterType="java.util.Map" resultType="java.lang.Integer">
        select count(1)
        from pn_order a
        where a.status &lt; 64
        <if test="whereSql!=null">
            and ${whereSql}
        </if>
        <if test="orderSid != null and orderSid != ''">
            and a.order_sid like '%${orderSid}%'
        </if>
        <if test="goodsName != null and goodsName != ''">
            and a.goods_name like '%${goodsName}%'
        </if>
        <if test="buyerName != null and buyerName != ''">
            and a.buyer_name like '%${buyerName}%'
        </if>
        <if test="startTime != null">
            and a.create_time &gt;= #{startTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endTime != null and endTime != ''">
            and a.create_time &lt;= #{endTime,jdbcType=TIMESTAMP}
        </if>
    </select>

    <select id="getByIds" parameterType="java.lang.String" resultMap="orderMap">
        select
        <include refid="columns"/>
        from pn_order a
        where a.order_sid in
        <foreach item="orderSid" index="index" collection="sids" open="(" separator="," close=")">
            #{orderSid}
        </foreach>
        order by order_id desc
    </select>

    <update id="update" parameterType="Order">
        update pn_order
        <trim prefix="set" suffixOverrides=",">
            <if test="goodsNum!=null">
                goods_num=#{goodsNum,jdbcType=VARCHAR},
            </if>
            <if test="goodsName!=null">
                goods_name=#{goodsName,jdbcType=VARCHAR},
            </if>
            <if test="price!=null">
                price=#{price,jdbcType=NUMERIC},
            </if>
            <if test="payPrice!=null">
                pay_price=#{payPrice,jdbcType=NUMERIC},
            </if>
            <if test="amount!=null">
                amount=#{amount,jdbcType=NUMERIC},
            </if>
            <if test="buyerName!=null">
                buyer_name=#{buyerName,jdbcType=VARCHAR},
            </if>
            <if test="buyerAddress!=null">
                buyer_address=#{buyerAddress,jdbcType=VARCHAR},
            </if>
            <if test="buyerPhone!=null">
                buyer_phone=#{buyerPhone,jdbcType=VARCHAR},
            </if>
            <if test="updateTime!=null">
                update_time=#{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="status!=null">
                status=#{status,jdbcType=NUMERIC},
            </if>
        </trim>
        where
        order_id=#{orderId}
    </update>

</mapper>
